% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tci_algorithms.R
\name{apply_tci}
\alias{apply_tci}
\title{Apply TCI algorithm}
\usage{
apply_tci(
  targets,
  pkmod,
  type = c("plasma", "effect"),
  dtm = NULL,
  custom_alg = NULL,
  inittm = 0,
  ignore_pd = FALSE,
  ...
)
}
\arguments{
\item{targets}{A matrix or data frame with columns 'value' and 'time'. Times
indicate when the TCI algorithm should begin infusions to reach each target.}

\item{pkmod}{`pkmod` object created by `pkmod()`.}

\item{type}{Type of TCI algorithm to be used. Options are plasma- or effect-site
targeting.}

\item{dtm}{TCI update frequency. Defaults to 1/6, corresponding to 10-second
intervals if model parameters are in terms of minutes.}

\item{custom_alg}{Custom TCI algorithm to be used instead of default plasma-
or effect-site targeting algorithms. The algorithm should be a function that
takes minimum arguments `Ct`, `pkmod`, and `dtm` and returns a single infusion
rate. See `tci_plasma` or `tci_effect` for examples and vignette on custom
models/algorithms for more details.}

\item{inittm}{Initial time to start TCI algorithm. Cannot be greater than
the minimum value of `targets[,"time"]`.}

\item{ignore_pd}{Logical. Should the PD component of the pkmod object (if present)
be ignored. By default, predict.tciinf will assume that 'value' refers to PD
targets if a PD model is specified.}

\item{...}{Arguments passed to TCI algorithm}
}
\description{
Apply a TCI algorithm to a set of targets and a `pkmod` object to calculate infusion
rates.
}
\details{
Predict method for tciinf objects.

Apply a TCI algorithm and pkmod to a set of sequential targets.
}
\examples{
# set of targets and times
targets = cbind(value = c(2,3,4,4), time = c(0,2,3,10))
# 3-compartment model with effect-site
my_mod <- pkmod(pars_pk = c(v1 = 8.995, v2 = 17.297, v3 = 120.963, cl = 1.382,
q2 = 0.919, q3 = 0.609, ke0 = 1.289))
# plasma targeting
apply_tci(targets, my_mod, "plasma")
# effect-site targeting
apply_tci(targets, my_mod, "effect")
# incorporate  PD model
my_mod_pd <- update(my_mod, pars_pd = c(c50 = 2.8, gamma = 1.47, e0 = 93, emx = 93),
pdfn = emax, pdinv = emax_inv)
pd_targets = cbind(value = c(70,60,50,50), time = c(0,2,3,10))
apply_tci(pd_targets, my_mod_pd, "effect")
}
