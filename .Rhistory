debug(tci:::predict.pkmod)
head(list(prior = predict(pkmod_prior, out$inf,tms = tmseq),
posterior = predict(pkmod_post, out$inf, tms = tmseq),
true = predict(pkmod_true, out$inf, tms = tmseq)))
pred
tms
length(tms)
nrow(pred)
head(list(prior = predict(pkmod_prior, out$inf,tms = tmseq),
posterior = predict(pkmod_post, out$inf, tms = tmseq),
true = predict(pkmod_true, out$inf, tms = tmseq)))
debug(tci:::predict.pkmod)
head(list(prior = predict(pkmod_prior, out$inf,tms = tmseq),
posterior = predict(pkmod_post, out$inf, tms = tmseq),
true = predict(pkmod_true, out$inf, tms = tmseq)))
library(tci)
debug(tci:::return_times = TRUE)
debug(tci:::simulate_clc)
sim_cl <- simulate_tci(pkmod_prior = mod3ecpt,
pkmod_true = mod_true,
target_vals = c(2,3,4,4),
target_tms = c(0,2,3,24),
obs_tms = c(1,2,4,8,12,16,24),
update_tms = c(1,2,4,8)+4,
delay = 4,
seed = 1)
predict(pkmod_prior, out$inf,tms = tmseq, return_times = TRUE)
resp <- list(prior = predict(pkmod_prior, out$inf,tms = tmseq, return_times = TRUE),
posterior = predict(pkmod_post, out$inf, tms = tmseq, return_times = TRUE),
true = predict(pkmod_true, out$inf, tms = tmseq, return_times = TRUE))
length(unique(sapply(resp, ncol)))==1
undebug(tci:::simulate_clc)
sim_cl <- simulate_tci(pkmod_prior = mod3ecpt,
pkmod_true = mod_true,
target_vals = c(2,3,4,4),
target_tms = c(0,2,3,24),
obs_tms = c(1,2,4,8,12,16,24),
update_tms = c(1,2,4,8)+4,
delay = 4,
seed = 1)
sim_cl
ggplot(melt(sim_cl$resp, id.vars = c("time","type"))) +
geom_line(aes(x = time, y = value, color = variable)) +
geom_point(data = sim_ol$obs, aes(x = time, y = obs)) +
facet_wrap(~type) +
labs(x = "Hours", y = "Concentration (mg/L)")
plot(sim_cl)
sim_cl <- simulate_tci(pkmod_prior = mod3ecpt,
pkmod_true = mod_true,
target_vals = c(2,3,4,4),
target_tms = c(0,2,3,24),
obs_tms = c(1,2,4,8,12,16,24),
update_tms = c(1,2,4,8),
delay = 4,
seed = 1)
ggplot(melt(sim_cl$resp, id.vars = c("time","type"))) +
geom_line(aes(x = time, y = value, color = variable)) +
geom_point(data = sim_ol$obs, aes(x = time, y = obs)) +
facet_wrap(~type) +
labs(x = "Hours", y = "Concentration (mg/L)")
ggplot(melt(sim_cl$resp, id.vars = c("time","type"))) +
geom_line(aes(x = time, y = value, color = variable)) +
geom_point(data = sim_cl$obs, aes(x = time, y = obs)) +
facet_wrap(~type) +
labs(x = "Hours", y = "Concentration (mg/L)")
sim_cl$resp
debug(tci:::bayes_update)
sim_cl <- simulate_tci(pkmod_prior = mod3ecpt,
pkmod_true = mod_true,
target_vals = c(2,3,4,4),
target_tms = c(0,2,3,24),
obs_tms = c(1,2,4,8,12,16,24),
update_tms = c(1,2,4,8),
delay = 4,
seed = 1)
optim(par = lpars, fn = log_posterior_neg, method = "BFGS", hessian = TRUE,
pkmod = pkmod, inf = inf, tms = tms, obs = obs, control = list(maxit = 5000))
obs
tms
tms
sim_cl <- simulate_tci(pkmod_prior = mod3ecpt,
pkmod_true = mod_true,
target_vals = c(2,3,4,4),
target_tms = c(0,2,3,24),
obs_tms = c(1,2,4,8,12,16,24),
update_tms = c(1,2,4,8),
delay = 0,
seed = 1)
obs
tms
lpars
optim(par = lpars, fn = log_posterior_neg, method = "BFGS", hessian = TRUE,
pkmod = pkmod, inf = inf, tms = tms, obs = obs, control = list(maxit = 5000))
obs
tms
optim(par = lpars, fn = log_posterior_neg, method = "BFGS", hessian = TRUE,
pkmod = pkmod, inf = inf, tms = tms, obs = obs, control = list(maxit = 5000))
lpars
sim_cl <- simulate_tci(pkmod_prior = mod3ecpt,
pkmod_true = mod_true,
target_vals = c(2,3,4,4),
target_tms = c(0,2,3,24),
# obs_tms = c(1,2,4,8,12,16,24),
obs_tms = c(1:24),
update_tms = c(1,2,4,8),
delay = 0,
seed = 1)
undebug(tci:::bayes_update)
sim_cl <- simulate_tci(pkmod_prior = mod3ecpt,
pkmod_true = mod_true,
target_vals = c(2,3,4,4),
target_tms = c(0,2,3,24),
# obs_tms = c(1,2,4,8,12,16,24),
obs_tms = c(1:24),
update_tms = c(1,2,4,8),
delay = 0,
seed = 1)
ggplot(melt(sim_cl$resp, id.vars = c("time","type"))) +
geom_line(aes(x = time, y = value, color = variable)) +
geom_point(data = sim_cl$obs, aes(x = time, y = obs)) +
facet_wrap(~type) +
labs(x = "Hours", y = "Concentration (mg/L)")
debug(tci:::bayes_update)
sim_cl <- simulate_tci(pkmod_prior = mod3ecpt,
pkmod_true = mod_true,
target_vals = c(2,3,4,4),
target_tms = c(0,2,3,24),
# obs_tms = c(1,2,4,8,12,16,24),
obs_tms = c(1:24),
update_tms = c(1,2,4,8),
delay = 0,
seed = 1)
lpars
tms
obs
optim(par = lpars, fn = log_posterior_neg, method = "BFGS", hessian = TRUE,
pkmod = pkmod, inf = inf, tms = tms, obs = obs, control = list(maxit = 5000))
undebug(tci:::bayes_update)
debug(tci:::clc)
sim_cl <- simulate_tci(pkmod_prior = mod3ecpt,
pkmod_true = mod_true,
target_vals = c(2,3,4,4),
target_tms = c(0,2,3,24),
# obs_tms = c(1,2,4,8,12,16,24),
obs_tms = c(1:24),
update_tms = c(1,2,4,8),
delay = 0,
seed = 1)
targets_sub
undebug(tci:::clc)
sim_cl <- simulate_tci(pkmod_prior = mod3ecpt,
pkmod_true = mod_true,
target_vals = c(2,3,4,4),
target_tms = c(0,2,3,24),
# obs_tms = c(1,2,4,8,12,16,24),
obs_tms = c(1:24),
update_tms = c(1,2,4,8),
delay = 0,
seed = 1)
ggplot(melt(sim_cl$resp, id.vars = c("time","type"))) +
geom_line(aes(x = time, y = value, color = variable)) +
geom_point(data = sim_cl$obs, aes(x = time, y = obs)) +
facet_wrap(~type) +
labs(x = "Hours", y = "Concentration (mg/L)")
simulate_tci
debug(simulate_clc)
simulate_clc
rm(simulate_clc)
library(tci)
# Chunk 1
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
echo = TRUE,
message = FALSE,
warning = FALSE,
fig.align="center",
fig.height= 4,
fig.width = 6
)
# Chunk 2
library(tci)
library(ggplot2)   # ggplot for plotting
library(gridExtra) # arrangeGrob to arrange plots
library(reshape2)  # melt function
# Chunk 4
# 1-compartment model
(mod1cpt <- pkmod(pars_pk = c(cl = 10, v = 15)))
# 3-compartment model with effect site
(mod3ecpt <- pkmod(pars_pk = c(cl = 10, q2 = 2, q3 =20, v = 15, v2 = 30, v3 = 50, ke0 = 1.2)))
# Chunk 5
# acceptable parameter names
list_parnms()
# Chunk 6
update(mod3ecpt, pars_pk = c(ke0 = 0.9), init = c(1,0.2,0.3,1))
# Chunk 7
# single infusion
(single_inf <- inf_manual(inf_tms = 0, duration = 0.5, inf_rate = 100))
# multiple infusions
(multi_inf <- inf_manual(inf_tms = c(0,3,6), duration = c(1,0.5,0.25), inf_rate = 100))
# Chunk 8
# plasma targeting for one-compartment model
inf_1cpt <- inf_tci(target_vals = c(2,3,4,4), target_tms = c(0,2,3,10),
pkmod = mod1cpt, type = "plasma")
head(inf_1cpt)
# effect-site targeting for three-compartment effect site model
inf_3ecpt <- inf_tci(target_vals = c(2,3,4,4), target_tms = c(0,2,3,10),
pkmod = mod3ecpt, type = "effect")
head(inf_3ecpt)
# Chunk 9
# prediction/observation times
tms_pred <- seq(0,10,0.01)
tms_obs <- c(0.5,1,2,4,6,10)
pre <- predict(mod3ecpt, inf = inf_3ecpt, tms = tms_pred)
obs <- simulate(mod3ecpt, seed = 1, inf = inf_3ecpt, tms = tms_obs, sigma_mult = 0.2)
# plot results
dat <- data.frame(time = tms_pred, `plasma (3 cmpt)` = pre[,"c1"],
`effect (ke0=1.2)` = pre[,"c4"],
check.names = FALSE)
datm <- melt(dat, id = "time")
dat_obs <- data.frame(time = tms_obs, con = obs, variable = "plasma (3 cmpt)")
p <- ggplot(datm, aes(x = time, y = value, color = variable)) +
geom_line() +
geom_point(data = dat_obs, aes(x = time, y = con)) +
xlab("Minutes") + ylab("Concentration (mg/L)")
p
# Chunk 10
# evaluate with different ke0 parameter
pre_misspec <- predict(mod3ecpt, inf = inf_3ecpt, tms = tms_pred,
pars_pk = c(ke0 = 0.8))
dat_misspec <- data.frame(pre_misspec, variable = "effect (ke0=0.8)", time = tms_pred)
p + geom_line(data = dat_misspec, aes(x = time, y = c4, color = variable))
# Chunk 11
# predicted concentrations
pre_1cpt <- predict(mod1cpt, inf = inf_3ecpt, tms = tms_pred)
dat_1cpt <- data.frame(pre_1cpt, variable = "plasma (1 cmpt)", time = tms_pred)
# simulated observations
obs_1cpt <- simulate(mod1cpt, seed = 1, inf = inf_3ecpt, tms = tms_obs, sigma_mult = 0.2)
p + geom_line(data = dat_1cpt, aes(x = time, y = c1, color = variable)) +
geom_point(data = data.frame(time = tms_obs, con = obs_1cpt, variable = "plasma (1 cmpt)"),
aes(x = time, y = con), inherit.aes = FALSE, color = "green4")
# Chunk 12
modpd <- update(mod3ecpt, pdfn = emax, pdinv = emax_inv,
pars_pd = c(e0 = 100, emx = 100, c50 = 3.5, gamma = 2.2))
# Chunk 13
inf_pd <- inf_tci(target_vals = c(70,60,50,50), target_tms = c(0,2,3,10), pkmod = modpd, type = "effect")
# Chunk 14
# predict responses
pre_pd <- predict(modpd, inf = inf_pd, tms = tms_pred)
# pd observations: 10 sec = 1/6 min
tms_pd_obs <- seq(1/6,10,1/6)
# simulate responses with additive error and parameter misspecification
obs_pd <- simulate(modpd, seed = 1, inf = inf_pd, tms = tms_pd_obs, sigma_add = 5,
pars_pk = c(ke0 = 0.7), pars_pd = c(c50 = 3, gamma = 1.8))
# plot results
dat_pd <- data.frame(time = tms_pred, `plasma (3 cmpt)` = pre_pd[,"c1"],
`effect (ke0=1.2)` = pre_pd[,"c4"],
BIS = pre_pd[,"pdresp"],
check.names = FALSE)
dat_pdm <- melt(dat_pd, id = "time")
dat_pdm$type <- as.factor(ifelse(dat_pdm$variable == "BIS", "PD","PK"))
dat_pd_obs <- data.frame(time = tms_pd_obs, BIS = obs_pd,
type = factor("PD"), variable = "BIS")
levels(dat_pdm$type) <- levels(dat_pd_obs$type) <- c("Bispectral Index", "Concentration (mg/L)")
ggplot(dat_pdm, aes(x = time, y = value, color = variable)) +
facet_wrap(type~., scales = "free", nrow = 2) +
geom_line() +
geom_point(data = dat_pd_obs, aes(x = time, y = BIS)) +
xlab("Minutes") + ylab("")
# Chunk 15
mod_true  <- update(mod3ecpt, pars_pk = c(cl = 20, q2 = 1.5, ke0 = 1.8))
sim_ol <- simulate_tci(pkmod_prior = mod3ecpt,
pkmod_true = mod_true,
target_vals = c(2,3,4,4),
target_tms = c(0,2,3,24),
obs_tms = c(1,2,4,8,12,16,24),
seed = 1)
ggplot(melt(sim_ol$resp, id.vars = c("time","type"))) +
geom_line(aes(x = time, y = value, color = variable)) +
geom_point(data = sim_ol$obs, aes(x = time, y = obs)) +
facet_wrap(~type) +
labs(x = "Hours", y = "Concentration (mg/L)")
mod3ecpt <- update(mod3ecpt, sigma_mult = 0.2,
Omega = matrix(diag(c(1.2,0.6,1.5,0.05)), 4,4,
dimnames = list(NULL, c("cl","q2","v","ke0"))))
sim_cl <- simulate_tci(pkmod_prior = mod3ecpt,
pkmod_true = mod_true,
target_vals = c(2,3,4,4),
target_tms = c(0,2,3,24),
# obs_tms = c(1,2,4,8,12,16,24),
obs_tms = c(1:24),
update_tms = c(1,2,4,8),
delay = 0,
seed = 1)
ggplot(melt(sim_cl$resp, id.vars = c("time","type"))) +
geom_line(aes(x = time, y = value, color = variable)) +
geom_point(data = sim_cl$obs, aes(x = time, y = obs)) +
facet_wrap(~type) +
labs(x = "Hours", y = "Concentration (mg/L)")
debug(simulate_clc)
sim_cl <- simulate_tci(pkmod_prior = mod3ecpt,
pkmod_true = mod_true,
target_vals = c(2,3,4,4),
target_tms = c(0,2,3,24),
# obs_tms = c(1,2,4,8,12,16,24),
obs_tms = c(1:24),
update_tms = c(1,2,4,8),
delay = 0,
seed = 1)
pkmod_prior
pkmod_post
pkmod_prior
out$pkmod_post
pkmod_post <- out$pkmod_post
ids = as.factor(1)
pd = !is.null(pkmod_prior$pdfn)
tmseq <- seq(min(out$inf[,"begin"]), max(out$inf[,"end"]), length.out = 1e3)
predict(pkmod_prior, out$inf,tms = tmseq, return_times = TRUE)
head(predict(pkmod_prior, out$inf,tms = tmseq, return_times = TRUE))
head(predict(pkmod_post, out$inf, tms = tmseq, return_times = TRUE))
sim_cl <- simulate_tci(pkmod_prior = mod3ecpt,
pkmod_true = mod_true,
target_vals = c(2,3,4,4),
target_tms = c(0,2,3,24),
# obs_tms = c(1,2,4,8,12,16,24),
obs_tms = c(1:24),
update_tms = c(1,2,4,8),
delay = 0,
seed = 1)
undebug(simulate_clc)
sim_cl <- simulate_tci(pkmod_prior = mod3ecpt,
pkmod_true = mod_true,
target_vals = c(2,3,4,4),
target_tms = c(0,2,3,24),
# obs_tms = c(1,2,4,8,12,16,24),
obs_tms = c(1:24),
update_tms = c(1,2,4,8),
delay = 0,
seed = 1)
library(tci)
ggplot(melt(sim_cl$resp, id.vars = c("time","type"))) +
geom_line(aes(x = time, y = value, color = variable)) +
geom_point(data = sim_cl$obs, aes(x = time, y = obs)) +
facet_wrap(~type) +
labs(x = "Hours", y = "Concentration (mg/L)")
sim_cl <- simulate_tci(pkmod_prior = mod3ecpt,
pkmod_true = mod_true,
target_vals = c(2,3,4,4),
target_tms = c(0,2,3,24),
# obs_tms = c(1,2,4,8,12,16,24),
obs_tms = c(1:24),
update_tms = c(1,2,4,8),
delay = 0,
seed = 1)
ggplot(melt(sim_cl$resp, id.vars = c("time","type"))) +
geom_line(aes(x = time, y = value, color = variable)) +
geom_point(data = sim_cl$obs, aes(x = time, y = obs)) +
facet_wrap(~type) +
labs(x = "Hours", y = "Concentration (mg/L)")
sim_cl <- simulate_tci(pkmod_prior = mod3ecpt,
pkmod_true = mod_true,
target_vals = c(2,3,4,4),
target_tms = c(0,2,3,24),
obs_tms = c(1,2,3,4,8,12),
update_tms = c(6,12,16),
delay = 0,
seed = 1)
ggplot(melt(sim_cl$resp, id.vars = c("time","type"))) +
geom_line(aes(x = time, y = value, color = variable)) +
geom_point(data = sim_cl$obs, aes(x = time, y = obs)) +
facet_wrap(~type) +
labs(x = "Hours", y = "Concentration (mg/L)")
devtools::document()
library(tci)
reshape2::melt
reshape::melt
?ggplot
library(tci)
devtools::document()
library(tci)
data <- data.frame(ID = 1:3, AGE = c(20,30,40), TBW = c(60,70,80),
HGT = c(150,160,170), MALE = c(TRUE,FALSE,TRUE))
pkmod_prior <- poppkmod(data, drug = "ppf", model = "eleveld")
pkmod_true  <- poppkmod(data, drug = "ppf", model = "eleveld", sample = TRUE)
obs_tms <- seq(1/6,10,1/6)
target_vals = c(75,60,50,50)
target_tms = c(0,3,6,10)
# open-loop simulation (without update_tms)
sim_ol <- simulate_tci(pkmod_prior, pkmod_true, target_vals, target_tms, obs_tms,
seed = 200)
# closed-loop simulation (with update_tms)
sim_cl <- simulate_tci(pkmod_prior, pkmod_true, target_vals, target_tms, obs_tms,
update_tms = c(2,4,6,8), seed = 200)
plot(sim_ol)
plot(sim_cl)
plot(sim_cl, wrap_id = TRUE)
plot(sim_cl, wrap_id = TRUE, show_inf = TRUE, show_data = TRUE)
devtools::document()
library(tci)
devtools::build(path = "../CRAN/")
library(gitcreds)
gitcreds_set()
?gitcreds_set
credentials::set_github_pat("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")
credentials::set_github_pat()
usethis::edit_r_environ()
usethis::git_sitrep()
usethis::use_git_config(user.name = "Ryan Jarrett", user.email = "ryantjarrett@gmail.com")
usethis::create_github_token()
credentials::set_github_pat("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")
credentials::set_github_pat()
usethis::git_sitrep()
edit_r_environ()
??edit_r_environ
usethis::edit_r_environ()
devtools::build(path = "../CRAN/")
data <- data.frame(ID = 1:2, AGE = c(30,40), TBW = c(70,80),
HGT = c(160,170), MALE = c(FALSE,TRUE))
pkmod_prior <- poppkmod(data, drug = "ppf", model = "eleveld")
pkmod_true  <- poppkmod(data, drug = "ppf", model = "eleveld", sample = TRUE)
library(tci)
data <- data.frame(ID = 1:2, AGE = c(30,40), TBW = c(70,80),
HGT = c(160,170), MALE = c(FALSE,TRUE))
pkmod_prior <- poppkmod(data, drug = "ppf", model = "eleveld")
pkmod_true  <- poppkmod(data, drug = "ppf", model = "eleveld", sample = TRUE)
obs_tms <- seq(1/6,10,1/6)
target_vals = c(75,60,50,50)
target_tms = c(0,3,6,10)
# open-loop simulation (without update_tms)
sim_ol <- simulate_tci(pkmod_prior, pkmod_true, target_vals, target_tms, obs_tms,
seed = 200)
plot(sim_ol, id = 1, type = "true")
plot(sim_ol, yvar = "c4", type = "true")
plot(sim_ol, yvar = "c4", type = "true", wrap_id = TRUE, show_inf = TRUE)
# closed-loop simulation (with update_tms)
sim_cl <- simulate_tci(pkmod_prior, pkmod_true, target_vals, target_tms, obs_tms,
update_tms = c(2,4,6,8), seed = 200)
plot(sim_cl, type = "posterior", id = 1, show_inf = TRUE)
plot(sim_cl, type = "posterior", wrap_id = TRUE, show_data = TRUE)
plot(sim_cl, yvar = "c4", wrap_id = TRUE)
update_tms = c(2,4,6), seed = 200)
sim_cl <- simulate_tci(pkmod_prior, pkmod_true, target_vals, target_tms, obs_tms,
update_tms = c(2,4,6), seed = 200)
devtools::build(path = "../CRAN/")
usethis::create_github_token()
credentials::set_github_pat("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")
usethis::edit_r_environ()
usethis::git_sitrep()
devtools::document()
library(tci)
devtools::build(path = "../CRAN/")
:inherits
?inherits
debug(tci:::simulate_olc)
data <- data.frame(ID = 1:5, AGE = seq(20,60,by=10), TBW = seq(60,80,by=5),
HGT = seq(150,190,by=10), MALE = c(TRUE,TRUE,FALSE,FALSE,FALSE))
pkmod_prior <- poppkmod(data, drug = "ppf", model = "eleveld")
pkmod_true  <- poppkmod(data, drug = "ppf", model = "eleveld", sample = TRUE)
library(tci)
debug(tci:::simulate_olc)
data <- data.frame(ID = 1:5, AGE = seq(20,60,by=10), TBW = seq(60,80,by=5),
HGT = seq(150,190,by=10), MALE = c(TRUE,TRUE,FALSE,FALSE,FALSE))
pkmod_prior <- poppkmod(data, drug = "ppf", model = "eleveld")
pkmod_true  <- poppkmod(data, drug = "ppf", model = "eleveld", sample = TRUE)
obs_tms <- seq(1/6,10,1/6)
target_vals = c(75,60,50,50)
target_tms = c(0,3,6,10)
sim <- simulate_olc(pkmod_prior, pkmod_true, target_vals, target_tms, obs_tms)
inherits(pkmod_prior, "pkmod")
!(inherits(pkmod_prior, "pkmod") & inherits(pkmod_true, "pkmod"))
pkmod_prior
!(inherits(pkmod_prior, "poppkmod") & inherits(pkmod_true, "poppkmod"))
!(inherits(pkmod_prior, "pkmod") & inherits(pkmod_true, "pkmod")) &
!(inherits(pkmod_prior, "poppkmod") & inherits(pkmod_true, "poppkmod"))
devtools::document()
devtools::document()
library(tci)
library(tci)
library(ggplot2)   # ggplot for plotting
# create a data frame of patient covariates
data <- data.frame(ID = 1:5, AGE = seq(20,60,by=10),
TBW = seq(60,80,by=5), HGT = seq(150,190,by=10),
MALE = c(TRUE,TRUE,FALSE,FALSE,FALSE))
# create population PK model
pkpd_elvd <- poppkmod(data = data, drug = "ppf", model = "eleveld")
pkpd_elvd
pkpd_elvd_iiv <- sample_iiv(pkpd_elvd)
set.seed(1)
pkpd_elvd_iiv2 <- poppkmod(data = data, drug = "ppf", model = "eleveld", sample = TRUE)
identical(pkpd_elvd_iiv, pkpd_elvd_iiv2)
set.seed(1)
pkpd_elvd_iiv <- sample_iiv(pkpd_elvd)
set.seed(1)
pkpd_elvd_iiv2 <- poppkmod(data = data, drug = "ppf", model = "eleveld", sample = TRUE)
identical(pkpd_elvd_iiv, pkpd_elvd_iiv2)
target_vals = c(75,60,50,50)
target_tms = c(0,3,6,10)
# effect-site targeting
inf_poppk <- inf_tci(pkpd_elvd, target_vals, target_tms, "effect")
debug(inf_tci)
# effect-site targeting
inf_poppk <- inf_tci(pkpd_elvd, target_vals, target_tms, "effect")
!(inherits(pkmod,"pkmod")|inherits(pkmod(poppkmod)))
inherits(pkmod,"pkmod")
pkmod
inherits(pkmod(poppkmod))
inherits(pkmod(poppkmod)
)
inherits(pkmod, "poppkmod")
!(inherits(pkmod,"pkmod")|inherits(pkmod, "poppkmod"))
library(tci)
devtools::build(path = "../CRAN/")
