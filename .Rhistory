inf_est
tci_plasma
inf_est
# find infusion to increase plasma concentration to 2 within 2 minutes.
inf_est <- tci_plasma(Cpt = 2, dt = 2, pkmod = pkmod1cpt, pars = pars_1cpt)
# verify that infusion will reach target at 2 minutes
plot(pkmod1cpt, pars = pars_1cpt, inf =  create_intvl(data.frame(time = c(2, 20), infrt = c(inf_est,0))),
title = "Infusion required to reach a plasma concentration of 2")
create_intvl(data.frame(time = c(2, 20), infrt = c(inf_est,0))
)
# find infusion to increase plasma concentration to 2 within 2 minutes.
inf_est <- tci_plasma(Cpt = 2, dt = 2, pkmod = pkmod1cpt, pars = pars_1cpt)
create_intvl(data.frame(time = c(2, 20), infrt = c(inf_est,0)))
# find infusion to increase plasma concentration to 2 within 2 minutes.
inf_est <- tci_plasma(Cpt = 2, dt = 2, pkmod = pkmod1cpt, pars = pars_1cpt)
create_intvl(data.frame(time = c(2, 20), infrt = c(inf_est,0)))
inf_est
tci_plasma(Cpt = 2, dt = 2, pkmod = pkmod1cpt, pars = pars_1cpt)
# find infusion to increase plasma concentration to 2 within 2 minutes.
inf_est <- tci_plasma(Cpt = 2, dt = 2, pkmod = pkmod1cpt, pars = pars_1cpt)
create_intvl(data.frame(time = c(2, 20), infrt = c(inf_est,0)))
emax
library(devtools)
check(),
check()
check()
document()
document()
check()
check()
check()
?.S3method
library(knitr)
library(pander)
library(microbenchmark)
library(ggplot2)
library(reshape)
library(gridExtra)
library(RColorBrewer)
library(devtools)
# library(tci)
setwd("~/tci")
devtools::load_all(".")
knitr::opts_chunk$set(echo = T, message = F, warning = F, fig.align="center")
(dose <- create_intvl(as.matrix(cbind(time = c(0.5,4,4.5,10), infrt = c(100,0,100,0)))))
pars_1cpt <- c(ke = 0.1, v = 10)
pars_3cpt <- c(k10=1.5,k12=0.15,k21=0.09,k13=0.8,k31=0.8,v1=10,v2=15,v3=100,ke0=1)
# predict for 1cpt model
head(predict(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, init = 2, return_init = T))
pkmod1cpt
dose
findInterval
?grid.arrange
#' @Examples
#'
#' # PK fixed effect values and random effect variances from Eleveld et al. (2018)
#' eleveld_theta_pk_est <- c(6.28,25.5,273,1.79,1.75,1.11,0.191,42.3,9.06,-0.0156,-0.00286,33.6,-0.0138,68.3,2.10,1.30,1.42,0.68)
#' @Examples
#'
#' # PK fixed effect values and random effect variances from Eleveld et al. (2018)
#' eleveld_theta_pk_est <- c(6.28,25.5,273,1.79,1.75,1.11,0.191,42.3,9.06,-0.0156,-0.00286,33.6,-0.0138,68.3,2.10,1.30,1.42,0.68)
#' eleveld_eta_pk_var <- c(0.610,0.565,0.597,0.265,0.346,0.209,0.463)
#'
eleveld_eta_pk_var
eleveld_theta_pk_est <- c(6.28,25.5,273,1.79,1.75,1.11,0.191,42.3,9.06,-0.0156,-0.00286,33.6,-0.0138,68.3,2.10,1.30,1.42,0.68)
eleveld_eta_pk_var <- c(0.610,0.565,0.597,0.265,0.346,0.209,0.463)
mvtnorm::rmvnorm(1,sigma = diag(eleveld_eta_pk_var))
unlist(mvtnorm::rmvnorm(1,sigma = diag(eleveld_eta_pk_var)))
c(mvtnorm::rmvnorm(1,sigma = diag(eleveld_eta_pk_var)))
eta_obs <- c(mvtnorm::rmvnorm(1,sigma = diag(eleveld_eta_pk_var)))
gen_eleveld_pk_pars(theta = eleveld_theta_pk_est,
#'                     eta = eta_obs,
#'                     patient_vars = patient_covariates)
gen_eleveld_pk_pars(theta = eleveld_theta_pk_est,
eta = eta_obs,
patient_vars = patient_covariates)
gen_eleveld_pk_pars(theta = eleveld_theta_pk_est,
eta = eta_obs,
patient_vars = patient_covariates)
eleveld_theta_pk_est <- c(6.28,25.5,273,1.79,1.75,1.11,0.191,42.3,9.06,-0.0156,-0.00286,33.6,-0.0138,68.3,2.10,1.30,1.42,0.68)
patient_covariates <- eleveld_pk[eleveld_pk$ID == 403,c("AGE","WGT","HGT","M1F2","PMA","TECH","BMI","FFM","A1V2")]
gen_eleveld_pk_pars(theta = eleveld_theta_pk_est,
eta = eta_obs,
patient_vars = patient_covariates)
c(mvtnorm::rmvnorm(1,sigma = diag(eleveld_eta_pd_var)))
eleveld_theta_pd_est <- c(3.08,0.146,93.0,1.47,8.03,0.0517,-0.00635,1.24,1.89)
eleveld_eta_pd_var <- c(0.242,0.702,0.230)
patient_covariates <- eleveld_pd[eleveld_pd$ID == 403,c("AGE","WGT","HGT","M1F2","PMA","TECH","A1V2")]
eta_obs <- c(mvtnorm::rmvnorm(1,sigma = diag(eleveld_eta_pd_var)))
gen_eleveld_pd_pars(theta = eleveld_theta_pd_est,
eta = eleveld_eta_pd_var,
patient_vars = patient_covariates)
library(tci)
(dose <- create_intvl(as.matrix(cbind(time = c(0.5,4,4.5,10), infrt = c(100,0,100,0)))))
create_intvl
# library(tci)
setwd("~/tci")
devtools::load_all(".")
create_intvl
library(tci)
create_intvl
library(knitr)
library(pander)
library(microbenchmark)
library(ggplot2)
library(reshape)
library(gridExtra)
library(RColorBrewer)
library(devtools)
library(tci)
setwd("~/tci")
(dose <- create_intvl(as.matrix(cbind(time = c(0.5,4,4.5,10), infrt = c(100,0,100,0)))))
pars_1cpt <- c(ke = 0.1, v = 10)
pars_3cpt <- c(k10=1.5,k12=0.15,k21=0.09,k13=0.8,k31=0.8,v1=10,v2=15,v3=100,ke0=1)
# predict for 1cpt model
head(predict(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, init = 2, return_init = T))
# predict for 3cpt model
head(predict(pkmod = pkmod3cptm, inf = dose, pars = pars_3cpt, return_init = T))
# predict for 3cpt model at specific values
predict(pkmod = pkmod3cptm, inf = dose, pars = pars_3cpt, tms = c(1,2,3))
plot(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, title = "Plasma concentrations for a 1 compartment model")
library(tci)
library(knitr)
library(pander)
library(microbenchmark)
library(ggplot2)
library(reshape)
library(gridExtra)
library(RColorBrewer)
library(devtools)
library(tci)
setwd("~/tci")
(dose <- create_intvl(as.matrix(cbind(time = c(0.5,4,4.5,10), infrt = c(100,0,100,0)))))
pars_1cpt <- c(ke = 0.1, v = 10)
pars_3cpt <- c(k10=1.5,k12=0.15,k21=0.09,k13=0.8,k31=0.8,v1=10,v2=15,v3=100,ke0=1)
# predict for 1cpt model
head(predict(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, init = 2, return_init = T))
# predict for 3cpt model
head(predict(pkmod = pkmod3cptm, inf = dose, pars = pars_3cpt, return_init = T))
library(tci)
library(tci)
library(tci)
setwd("~/tci")
tci
?tci
tci
predict.pkmod
predict
#' Create dosing schedule
#'
#' @param dose Data frame with columns "time" and "infrt". Should include
#' @export
create_intvl <- function(dose, inittm = 0){
# tms <- c(inittm,dose[,"time"]+inittm)
tms <- c(inittm,dose[,"time"])
as.matrix(cbind(infrt = dose[,"infrt"],
begin = tms[-length(tms)],
end = tms[-1]))
}
dose <- data.frame(time = c(0.5,4,4.5,10), infrt = c(100,0,100,0))
create_intvl(dose)
library(tci)
library(tci)
create_intvl
(dose <- create_intvl(as.matrix(cbind(time = c(0.5,4,4.5,10), infrt = c(100,0,100,0)))))
pars_1cpt <- c(ke = 0.1, v = 10)
pars_3cpt <- c(k10=1.5,k12=0.15,k21=0.09,k13=0.8,k31=0.8,v1=10,v2=15,v3=100,ke0=1)
# predict for 1cpt model
head(predict(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, init = 2, return_init = T))
library(tci)
create_intvl
tci::create_intvl
?tci::create_intvl
devtools::document()
library(tci)
library(tci)
plot(rnorm(10), rnorm(10))
rnorm(10)
plot
create_intvl
plot
plot.default
?plot.default
devtools::document()
library(tci)
create_intvl
plot
x <- y <- rnorm(10)
plot(x,y)
devtools::document()
create_intvl
library(tci)
x
y
plot
plot(x,y)
plot.default(x,y)
devtools::document()
(dose <- create_intvl(as.matrix(cbind(time = c(0.5,4,4.5,10), infrt = c(100,0,100,0)))))
pars_1cpt <- c(ke = 0.1, v = 10)
pars_3cpt <- c(k10=1.5,k12=0.15,k21=0.09,k13=0.8,k31=0.8,v1=10,v2=15,v3=100,ke0=1)
library(tci)
# predict for 1cpt model
head(predict(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, init = 2, return_init = T))
(dose <- create_intvl(as.matrix(cbind(time = c(0.5,4,4.5,10), infrt = c(100,0,100,0)))))
pars_1cpt <- c(ke = 0.1, v = 10)
pars_3cpt <- c(k10=1.5,k12=0.15,k21=0.09,k13=0.8,k31=0.8,v1=10,v2=15,v3=100,ke0=1)
# predict for 1cpt model
head(predict(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, init = 2, return_init = T))
x
y
fit <- lm(y~x)
fit
predict(fit)
devtools::document()
library(tci)
(dose <- create_intvl(as.matrix(cbind(time = c(0.5,4,4.5,10), infrt = c(100,0,100,0)))))
pars_1cpt <- c(ke = 0.1, v = 10)
pars_3cpt <- c(k10=1.5,k12=0.15,k21=0.09,k13=0.8,k31=0.8,v1=10,v2=15,v3=100,ke0=1)
# predict for 1cpt model
head(predict(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, init = 2, return_init = T))
# predict for 3cpt model
head(predict(pkmod = pkmod3cptm, inf = dose, pars = pars_3cpt, return_init = T))
# predict for 3cpt model at specific values
predict(pkmod = pkmod3cptm, inf = dose, pars = pars_3cpt, tms = c(1,2,3))
plot(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, title = "Plasma concentrations for a 1 compartment model")
pal
devtools::document()
library(tci)
pal
library(tci)
devtools::document()
devtools::document()
tail_vec(matrix(1:8,2,4))
matrix(1:8,2,4)
x <- matrix(1:8,2,4)
list(x)[[1]]
devtools::document()
devtools::document()
?cut
cut
getAnywhere("cut")
getAnywhere(base::cut)
getAnywhere(cut)
getAnywhere(base::cut)
base:::cut
getMethod(base::cut)
getMethod(base::cut())
cut
methods(cut)
getMethod(base::cut.default
)
getAnywhere(base::cut.default)
seq(0,0.767,1/6)
seqby(0,0.767,1/6)
?seq
devtools::document()
devtools::document()
warnings()
devtools::document()
warnings()
data(eleveld_pk)
eleveld_pk
eleveld_pk[1:20,c("ID","AGE","WGT","HGT","M1F2","PMA","TECH","BMI","FFM","A1V2")]
eleveld_pk[1:10,c("ID","AGE","WGT","HGT","M1F2","PMA","TECH","BMI","FFM","A1V2")]
df <- eleveld_pk[1:10,c("ID","AGE","WGT","HGT","M1F2","PMA","TECH","BMI","FFM","A1V2")]
eleveld_poppk(df, rate = TRUE)
eleveld_poppk(df, rate = FALSE, PD = TRUE, rand = TRUE)
gen_eleveld_pk_pars
eleveld_poppk(df, rate = FALSE, PD = TRUE, rand = TRUE)
poppk_cov("eleveld", pd = TRUE)
poppk_cov("Eleveld", pd = TRUE)
??melt
library(tci)
usethis::use_package("ggplot2")
library(tci)
library(tci)
(dose <- create_intvl(as.matrix(cbind(time = c(0.5,4,4.5,10), infrt = c(100,0,100,0)))))
pars_1cpt <- c(ke = 0.1, v = 10)
pars_3cpt <- c(k10=1.5,k12=0.15,k21=0.09,k13=0.8,k31=0.8,v1=10,v2=15,v3=100,ke0=1)
# predict for 1cpt model
head(predict(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, init = 2, return_init = T))
# predict for 3cpt model
head(predict(pkmod = pkmod3cptm, inf = dose, pars = pars_3cpt, return_init = T))
# predict for 3cpt model at specific values
predict(pkmod = pkmod3cptm, inf = dose, pars = pars_3cpt, tms = c(1,2,3))
plot(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, title = "Plasma concentrations for a 1 compartment model")
library(tci)
(dose <- create_intvl(as.matrix(cbind(time = c(0.5,4,4.5,10), infrt = c(100,0,100,0)))))
pars_1cpt <- c(ke = 0.1, v = 10)
pars_3cpt <- c(k10=1.5,k12=0.15,k21=0.09,k13=0.8,k31=0.8,v1=10,v2=15,v3=100,ke0=1)
# predict for 1cpt model
head(predict(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, init = 2, return_init = T))
# predict for 3cpt model
head(predict(pkmod = pkmod3cptm, inf = dose, pars = pars_3cpt, return_init = T))
# predict for 3cpt model at specific values
predict(pkmod = pkmod3cptm, inf = dose, pars = pars_3cpt, tms = c(1,2,3))
plot(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, title = "Plasma concentrations for a 1 compartment model")
plot(pkmod = pkmod3cptm, inf = dose, pars = pars_3cpt, title = "Concentrations for a 3 compartment model with an effect site")
# find infusion to increase plasma concentration to 2 within 2 minutes.
inf_est <- tci_plasma(Cpt = 2, dt = 2, pkmod = pkmod1cpt, pars = pars_1cpt)
library(tci)
# find infusion to increase plasma concentration to 2 within 2 minutes.
inf_est <- tci_plasma(Cpt = 2, dt = 2, pkmod = pkmod1cpt, pars = pars_1cpt)
library(tci)
plot(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, title = "Plasma concentrations for a 1 compartment model")
# find infusion to increase plasma concentration to 2 within 2 minutes.
inf_est <- tci_plasma(Cpt = 2, dt = 2, pkmod = pkmod1cpt, pars = pars_1cpt)
??tci_plasma
tci::tci_plasma
tci_effect
library(tci)
plot(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, title = "Plasma concentrations for a 1 compartment model")
plot(pkmod = pkmod3cptm, inf = dose, pars = pars_3cpt, title = "Concentrations for a 3 compartment model with an effect site")
# find infusion to increase plasma concentration to 2 within 2 minutes.
inf_est <- tci_plasma(Cpt = 2, dt = 2, pkmod = pkmod1cpt, pars = pars_1cpt)
gen_data
# calculate the 10 second infusion rate required to reach a concentration of 1 ug/ml in the effect-site compartment with existing drug in the first compartment.
kR_Cet <- tci_effect(Cet = 1, pkmod = pkmod3cptm, pars = pars_3cpt, init = c(1,0,0,0), dt = 1/6)
inf <- create_intvl(data.frame(time = c(1/6, 20), infrt = c(kR_Cet,0)))
# one compartment model
tci_1cpt <- tci(Cet, tms, pkmod = pkmod1cpt, pars = pars_1cpt, tci_alg = "plasma")
sigmoid_induct_eleveld
library(tci)
?predict
?nlm
?rnorm
?head
?tail
plot(tci_1cpt, title = "Plasma-targeting for one-compartment model")
# one compartment model
tci_1cpt <- tci(Cet, tms, pkmod = pkmod1cpt, pars = pars_1cpt, tci_alg = "plasma")
# find infusion to increase plasma concentration to 2 within 2 minutes.
inf_est <- tci_plasma(Cpt = 2, dt = 2, pkmod = pkmod1cpt, pars = pars_1cpt)
?predict
?common
?plot
?plot
library(tci)
(dose <- create_intvl(as.matrix(cbind(time = c(0.5,4,4.5,10), infrt = c(100,0,100,0)))))
pars_1cpt <- c(ke = 0.1, v = 10)
pars_3cpt <- c(k10=1.5,k12=0.15,k21=0.09,k13=0.8,k31=0.8,v1=10,v2=15,v3=100,ke0=1)
# predict for 1cpt model
head(predict(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, init = 2, return_init = T))
# predict for 3cpt model
head(predict(pkmod = pkmod3cptm, inf = dose, pars = pars_3cpt, return_init = T))
# predict for 3cpt model at specific values
predict(pkmod = pkmod3cptm, inf = dose, pars = pars_3cpt, tms = c(1,2,3))
plot(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, title = "Plasma concentrations for a 1 compartment model")
plot(pkmod = pkmod3cptm, inf = dose, pars = pars_3cpt, title = "Concentrations for a 3 compartment model with an effect site")
ggplot
# find infusion to increase plasma concentration to 2 within 2 minutes.
inf_est <- tci_plasma(Cpt = 2, dt = 2, pkmod = pkmod1cpt, pars = pars_1cpt)
# verify that infusion will reach target at 2 minutes
plot(pkmod1cpt, pars = pars_1cpt, inf =  create_intvl(data.frame(time = c(2, 20), infrt = c(inf_est,0))),
title = "Infusion required to reach a plasma concentration of 2")
# test for 3 compartment model with initial concentration in central compartment
inf_est <- tci_plasma(Cpt = 2, dt = 2, pkmod = pkmod3cptm, pars = pars_3cpt, init = c(1,0,0,0))
plot(pkmod3cptm, pars = pars_3cpt, inf =  create_intvl(data.frame(time = c(2, 20), infrt = c(inf_est,0))),
init = c(1,0,0,0), title = "Infusion required to reach a plasma concentration of 2 in a 3cmpt model")
cut
library(tci)
library(tci)
create_intvl
library(tci)
(dose <- create_intvl(as.matrix(cbind(time = c(0.5,4,4.5,10), infrt = c(100,0,100,0)))))
pars_1cpt <- c(ke = 0.1, v = 10)
pars_3cpt <- c(k10=1.5,k12=0.15,k21=0.09,k13=0.8,k31=0.8,v1=10,v2=15,v3=100,ke0=1)
# predict for 1cpt model
head(predict(pkmod = pkmod1cpt, inf = dose, pars = pars_1cpt, init = 2, return_init = T))
# predict for 1cpt model
head(predict(pkmod1cpt, inf = dose, pars = pars_1cpt, init = 2, return_init = T))
# predict for 3cpt model
head(predict(pkmod3cptm, inf = dose, pars = pars_3cpt, return_init = T))
# predict for 3cpt model at specific values
predict(pkmod3cptm, inf = dose, pars = pars_3cpt, tms = c(1,2,3))
plot(pkmod1cpt, inf = dose, pars = pars_1cpt, title = "Plasma concentrations for a 1 compartment model")
dose
pkmod1cpt
plot(x = pkmod1cpt, inf = dose, pars = pars_1cpt, title = "Plasma concentrations for a 1 compartment model")
library(tci)
(dose <- create_intvl(as.matrix(cbind(time = c(0.5,4,4.5,10), infrt = c(100,0,100,0)))))
pars_1cpt <- c(ke = 0.1, v = 10)
pars_3cpt <- c(k10=1.5,k12=0.15,k21=0.09,k13=0.8,k31=0.8,v1=10,v2=15,v3=100,ke0=1)
# predict for 1cpt model
head(predict(pkmod1cpt, inf = dose, pars = pars_1cpt, init = 2, return_init = T))
# predict for 3cpt model
head(predict(pkmod3cptm, inf = dose, pars = pars_3cpt, return_init = T))
# predict for 3cpt model at specific values
predict(pkmod3cptm, inf = dose, pars = pars_3cpt, tms = c(1,2,3))
plot(pkmod1cpt, inf = dose, pars = pars_1cpt, title = "Plasma concentrations for a 1 compartment model")
debug(plot.pkmod)
getAnywhere("plot.pkmod")
library(tci)
plot(pkmod1cpt, inf = dose, pars = pars_1cpt, title = "Plasma concentrations for a 1 compartment model")
plot(pkmod3cptm, inf = dose, pars = pars_3cpt, title = "Concentrations for a 3 compartment model with an effect site")
# find infusion to increase plasma concentration to 2 within 2 minutes.
inf_est <- tci_plasma(Cpt = 2, dt = 2, pkmod = pkmod1cpt, pars = pars_1cpt)
# verify that infusion will reach target at 2 minutes
plot(pkmod1cpt, pars = pars_1cpt, inf =  create_intvl(data.frame(time = c(2, 20), infrt = c(inf_est,0))),
title = "Infusion required to reach a plasma concentration of 2")
# test for 3 compartment model with initial concentration in central compartment
inf_est <- tci_plasma(Cpt = 2, dt = 2, pkmod = pkmod3cptm, pars = pars_3cpt, init = c(1,0,0,0))
plot(pkmod3cptm, pars = pars_3cpt, inf =  create_intvl(data.frame(time = c(2, 20), infrt = c(inf_est,0))),
init = c(1,0,0,0), title = "Infusion required to reach a plasma concentration of 2 in a 3cmpt model")
# calculate the 10 second infusion rate required to reach a concentration of 1 ug/ml in the effect-site compartment with existing drug in the first compartment.
kR_Cet <- tci_effect(Cet = 1, pkmod = pkmod3cptm, pars = pars_3cpt, init = c(1,0,0,0), dt = 1/6)
inf <- create_intvl(data.frame(time = c(1/6, 20), infrt = c(kR_Cet,0)))
plot(pkmod3cptm, inf, pars = pars_3cpt, init = c(1,0,0,0),
title = "10-sec infusion to reach a Cet of 1 in a 3cmpt model with initial cons")
inf
# calculate the 10 second infusion rate required to reach a concentration of 1 ug/ml in the effect-site compartment with existing drug in the first compartment.
kR_Cet <- tci_effect(Cet = 1, pkmod = pkmod3cptm, pars = pars_3cpt, init = c(1,0,0,0), dt = 1/6)
kR_Cet
inf <- create_intvl(data.frame(time = c(1/6, 20), infrt = c(kR_Cet,0)))
plot(pkmod3cptm, inf, pars = pars_3cpt, init = c(1,0,0,0),
title = "10-sec infusion to reach a Cet of 1 in a 3cmpt model with initial cons")
pkmod3cptm
plot(pkmod3cptm, inf = inf, pars = pars_3cpt, init = c(1,0,0,0),
title = "10-sec infusion to reach a Cet of 1 in a 3cmpt model with initial cons")
# The algorithm may also be used to specify target different compartments, if desired.
# Find 1 minute infusion required to reach a concentration of 0.5 in compartment 2 with no prior infusions.
infdt = 1
kR_Cet_cmpt2 <- tci_effect(Cet = 0.5, pkmod = pkmod3cptm, pars = pars_3cpt, init = c(0,0,0,0), dt = infdt, cmpt = 2)
inf_cmpt2 <- create_intvl(data.frame(time = c(infdt, 20), infrt = c(kR_Cet_cmpt2,0)))
plot(pkmod3cptm, inf = inf_cmpt2, pars = pars_3cpt, init = c(0,0,0,0),
title = "1-min infusion to reach a c2 con of 0.5 in a 3cmpt model")
tms <- c(0,5,10,15)
Cet <- c(2,1.5,1,1)
# one compartment model
tci_1cpt <- tci(Cet, tms, pkmod = pkmod1cpt, pars = pars_1cpt, tci_alg = "plasma")
plot(tci_1cpt, title = "Plasma-targeting for one-compartment model")
# three compartment model
tci_3cpt <- tci(Cet, tms, pkmod = pkmod3cptm, pars = pars_3cpt, tci_alg = "plasma")
plot(tci_3cpt, title = "Plasma-targeting for three-compartment model")
# effect-site targeting
tci_3cpt_effect <- tci(Cet, tms, pkmod = pkmod3cptm, pars = pars_3cpt)
plot(tci_3cpt_effect, title = "Effect-site targeting for three-compartment model")
# effect-site targeting with initial concentrations
tci_3cpt_effect_init <- tci(Cet, tms, pkmod = pkmod3cptm, pars = pars_3cpt, init = c(2,0,0,2))
plot(tci_3cpt_effect_init, title = "Effect-site targeting for three-compartment model and initial concentrations")
# Emax model
pars_emax <- c(c50 = 1.5, gamma = 4, e0 = 100, emx = 100)
ce_seq <- seq(0,4,0.1)
# inverse Emax model
all.equal(inv_emax(emax(ce_seq, pars_emax), pars_emax), ce_seq)
plot(pdmod = emax,
pkmod = pkmod3cptm,
pars_pd = pars_emax,
pars_pk = pars_3cpt,
inf = create_intvl(data.frame(time = c(2,4,6,10),
infrt = c(400,0,400,0))),
title = "Predicted PK-PD responses")
library(tci)
plot(pdmod = emax,
pkmod = pkmod3cptm,
pars_pd = pars_emax,
pars_pk = pars_3cpt,
inf = create_intvl(data.frame(time = c(2,4,6,10),
infrt = c(400,0,400,0))),
title = "Predicted PK-PD responses")
plot(pdmod = emax,
pkmod = pkmod3cptm,
pars_pd = pars_emax,
pars_pk = pars_3cpt,
inf = create_intvl(data.frame(time = c(2,4,6,10),
infrt = c(400,0,400,0))),
title = "Predicted PK-PD responses")
plot(x = emax,
pkmod = pkmod3cptm,
pars_pd = pars_emax,
pars_pk = pars_3cpt,
inf = create_intvl(data.frame(time = c(2,4,6,10),
infrt = c(400,0,400,0))),
title = "Predicted PK-PD responses")
tms <- seq(0,15,5)
bist <- c(40,50,70,70)
tci_bis_res <- tci_pd(pdresp = bist,
tms = tms,
pdinv = inv_emax,
pdmod = emax,
pkmod = pkmod3cptm,
pars_pk = pars_3cpt,
pars_pd = pars_emax)
# plot TCI object with pd response
plot(tci_bis_res, title = "Extension of TCI algorithm to PD targets")
# Simulate PK-PD data under model misspecification.
# true parameters: pars_3cpt0, pars_emax0
# prior parameters: pars_3cpt, pars_emax
pars_3cpt0 <- c(k10=1.7,k12=0.13,k21=0.1,k13=0.8,k31=0.8,v1=15,v2=16,v3=90,ke0=1.2)
pars_emax0 <- c(c50 = 1.2, gamma = 3.5, e0 = 100, emx = 100)
# Predicted concentrations / responses under model with pars "pars_3cpt", "pars_emax"
tci_bis_res <- tci_pd(pdresp = c(40,50,70,70),
tms = c(0,5,10,15),
pdinv = inv_emax,
pdmod = emax,
pkmod = pkmod3cptm,
pars_pk = pars_3cpt,
pars_pd = pars_emax)
# Generate data using infusion schedule above under a different PK-PD model
pkpddsim <- gen_data(inf = tci_bis_res,
pkmod = pkmod3cptm, pars_pk0 = pars_3cpt0,
pdmod = emax, pars_pd0 = pars_emax0,
sigma_add = 7)
library(tci)
# Generate data using infusion schedule above under a different PK-PD model
pkpddsim <- gen_data(inf = tci_bis_res,
pkmod = pkmod3cptm, pars_pk0 = pars_3cpt0,
pdmod = emax, pars_pd0 = pars_emax0,
sigma_add = 7)
library(tci)
gen_data
